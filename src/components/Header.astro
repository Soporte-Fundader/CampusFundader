---

import ThemeToggle from './ThemeToggle.astro';
import UserIcon from '../Icons/UserIcon.astro';
import MenuIcon from '../Icons/MenuIcon.astro';
import XIcon from '../Icons/XIcon.astro';
import User from '../Icons/UserIcon.astro';

interface Props {
  currentPath?: string;
}

const { currentPath = Astro.url.pathname } = Astro.props;

const navItems = [
  { href: '/', label: 'Inicio' },
  { href: '/cisco-academy', label: 'Cisco Academy' },
  { href: '/cursos', label: 'Cursos' }
];

const isActive = (href: string) => currentPath === href;
---

<header class="sticky top-0 z-50 bg-white/95 dark:bg-slate-800/95 backdrop-blur-md shadow-sm border-b border-gray-200/20 dark:border-gray-700/20">
  <div class="container mx-auto px-4 py-3">
    <div class="flex items-center justify-between">
      <!-- Logo Section -->
      <div class="flex items-center">
        <a 
          href="/" 
          class="flex items-center gap-3 group"
          aria-label="Campus Fundader - Ir al inicio"
        >
          <img 
            src="/LogoF_.svg" 
            alt="Campus Fundader Logo" 
            class="h-18 w-auto transition-transform group-hover:scale-105" 
            loading="eager"
          />
          <!-- <span class="hidden sm:block text-xl font-heading font-bold text-primary-600 dark:text-white transition-colors">
            Campus Fundader
          </span> -->
        </a>
      </div>
      
      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center" role="navigation" aria-label="Navegación principal">
        <ul class="flex items-center space-x-8">
          {navItems.map(({ href, label }) => (
            <li>
              <a 
                href={href}
                class={`relative px-3 py-2 text-sm font-medium transition-all duration-200 hover:text-secondary-500 dark:hover:text-secondary-400 ${
                  isActive(href) 
                    ? 'text-secondary-600 dark:text-secondary-400' 
                    : 'text-gray-700 dark:text-gray-200'
                }`}
                aria-current={isActive(href) ? 'page' : undefined}
              >
                {label}
                {isActive(href) && (
                  <span class="absolute bottom-0 left-0 right-0 h-0.5 bg-secondary-500 rounded-full"></span>
                )}
              </a>
            </li>
          ))}
        </ul>
      </nav>
      
      <!-- Actions Section -->
      <div class="flex items-center gap-4">
        <!-- Login Button -->
        <a 
          href="https://campus.fundader.org/login/index.php?loginredirect=1" 
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center gap-2 px-4 py-2 text-sm font-medium text-secondary-600 dark:text-secondary-400 hover:text-secondary-700 dark:hover:text-secondary-300 hover:bg-secondary-50 dark:hover:bg-secondary-900/20 rounded-lg transition-all duration-200"
          aria-label="Acceder al campus (se abre en nueva ventana)"
        >
          <span>Acceder</span>
          <UserIcon class="h-4 w-4" />
        </a>

        <!-- Theme Toggle -->
        <ThemeToggle />
        
        <!-- Mobile Menu Button -->
        <button 
          id="mobile-menu-toggle" 
          class="md:hidden p-2 text-gray-700 dark:text-gray-200 hover:text-secondary-500 dark:hover:text-secondary-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-all duration-200"
          aria-label="Abrir menú de navegación"
          aria-expanded="false"
          aria-controls="mobile-menu"
        >
          <MenuIcon class="h-5 w-5" id="menu-icon" />
          <XIcon class="h-5 w-5 hidden" id="close-icon" />
        </button>
      </div>
    </div>
  </div>
  
  <!-- Mobile Menu -->
  <div 
    id="mobile-menu" 
    class="hidden md:hidden bg-white dark:bg-slate-800 shadow-lg border-t border-gray-200 dark:border-gray-700"
    role="navigation"
    aria-label="Navegación móvil"
  >
    <div class="container mx-auto px-4 py-4">
      <nav>
        <ul class="flex flex-col space-y-1">
          {navItems.map(({ href, label }) => (
            <li>
              <a 
                href={href}
                class={`block px-4 py-3 text-sm font-medium rounded-lg transition-all duration-200 hover:bg-gray-50 dark:hover:bg-gray-700 ${
                  isActive(href) 
                    ? 'text-secondary-600 dark:text-secondary-400 bg-secondary-50 dark:bg-secondary-900/20' 
                    : 'text-gray-700 dark:text-gray-200'
                }`}
                aria-current={isActive(href) ? 'page' : undefined}
              >
                {label}
              </a>
            </li>
          ))}
        </ul>
      </nav>
      
      <!-- Mobile Login Button -->
      <div class="mt-4 pt-4 border-t border-gray-200 dark:border-gray-700">
        <a 
          href="https://campus.fundader.org/login/index.php?loginredirect=1" 
          target="_blank"
          rel="noopener noreferrer"
          class="flex items-center justify-center gap-2 w-full px-4 py-3 text-sm font-medium text-white bg-secondary-600 hover:bg-secondary-700 rounded-lg transition-all duration-200"
          aria-label="Acceder al campus (se abre en nueva ventana)"
        >
          <span>Acceder al Campus</span>
          <User class="h-4 w-4" />
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  class HeaderNavigation {
    private toggle: HTMLElement | null;
    private menu: HTMLElement | null;
    private menuIcon: HTMLElement | null;
    private closeIcon: HTMLElement | null;
    private isOpen: boolean = false;

    constructor() {
      this.toggle = document.getElementById('mobile-menu-toggle');
      this.menu = document.getElementById('mobile-menu');
      this.menuIcon = document.getElementById('menu-icon');
      this.closeIcon = document.getElementById('close-icon');
      
      this.init();
    }

    private init(): void {
      // Mobile menu functionality
      if (this.toggle && this.menu) {
        this.toggle.addEventListener('click', () => this.toggleMobileMenu());
        
        // Close menu when clicking outside
        document.addEventListener('click', (e) => {
          if (this.isOpen && !this.toggle?.contains(e.target as Node) && !this.menu?.contains(e.target as Node)) {
            this.closeMobileMenu();
          }
        });
        
        // Close menu on escape key
        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape' && this.isOpen) {
            this.closeMobileMenu();
          }
        });
        
        // Close menu on resize to desktop
        window.addEventListener('resize', () => {
          if (window.innerWidth >= 768 && this.isOpen) {
            this.closeMobileMenu();
          }
        });
      }
    }

    private toggleMobileMenu(): void {
      this.isOpen ? this.closeMobileMenu() : this.openMobileMenu();
    }

    private openMobileMenu(): void {
      this.menu?.classList.remove('hidden');
      this.menuIcon?.classList.add('hidden');
      this.closeIcon?.classList.remove('hidden');
      this.toggle?.setAttribute('aria-expanded', 'true');
      this.toggle?.setAttribute('aria-label', 'Cerrar menú de navegación');
      this.isOpen = true;
      
      // Prevent body scroll
      document.body.style.overflow = 'hidden';
    }

    private closeMobileMenu(): void {
      this.menu?.classList.add('hidden');
      this.menuIcon?.classList.remove('hidden');
      this.closeIcon?.classList.add('hidden');
      this.toggle?.setAttribute('aria-expanded', 'false');
      this.toggle?.setAttribute('aria-label', 'Abrir menú de navegación');
      this.isOpen = false;
      
      // Restore body scroll
      document.body.style.overflow = '';
    }
  }

  // Initialize when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    new HeaderNavigation();
  });
</script>