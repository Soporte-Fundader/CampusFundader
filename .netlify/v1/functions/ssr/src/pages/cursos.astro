---
import Layout from '../layouts/Layout.astro';
import { contentfulClient } from "../lib/contentful";
import type { EntryFieldTypes } from "contentful";

import AwardIcon from '../Icons/AwardIcon.astro';
import BookOpenIcon from '../Icons/BookOpenIcon.astro';
import ChevronRightIcon from '../Icons/ChevronRightIcon.astro';
import StarIcon from '../Icons/StarIcon.astro';
import UsersIcon from '../Icons/UsersIcon.astro';
import SearchIcon from '../Icons/SearchIcon.astro';
import SparklesIcon from '../Icons/SparklesIcon.astro';

// Interfaz para los cursos
interface Cursos {
  contentTypeId: "cursos";
  fields: {
    cursosT: EntryFieldTypes.Text;
    cursosD: EntryFieldTypes.Text;
    cursosDif: EntryFieldTypes.Text;
    cursosC: EntryFieldTypes.Text;
    cursoslug: EntryFieldTypes.Text;
    cursoI: EntryFieldTypes.AssetLink;
    cursoDestacado: EntryFieldTypes.Boolean;
  };
}


// Obtener todos los cursos
const { items: allCourses } = await contentfulClient.getEntries<Cursos>({
  content_type: "cursos",
  order: "-fields.cursoDestacado"
});

// Obtener categorías y dificultades únicas
const categories = [...new Set(allCourses.map(course => course.fields.cursosC))].filter(Boolean);
const difficulties = [...new Set(allCourses.map(course => course.fields.cursosDif))].filter(Boolean);

// Cursos destacados (los primeros 6 destacados)
const featuredCourses = allCourses.filter(course => course.fields.cursoDestacado).slice(0, 6);
---

<Layout title="Cursos | Campus Fundader">
  <!-- Hero Section Mejorado -->
  <section class="relative min-h-[70vh] flex items-center justify-center overflow-hidden">
    <!-- Fondo con gradiente -->
    <div class="absolute inset-0 bg-gradient-to-br from-primary-900 via-primary-800 to-secondary-900"></div>
    
    <!-- Patrón de fondo -->
    <div class="absolute inset-0 opacity-10">
      <div class="absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"%3E%3Cg fill="none" fill-rule="evenodd"%3E%3Cg fill="%23ffffff" fill-opacity="0.1"%3E%3Ccircle cx="30" cy="30" r="2"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')] animate-float"></div>
    </div>
    
    <!-- Elementos decorativos -->
    <div class="absolute top-20 left-10 w-32 h-32 bg-secondary-500/20 rounded-full blur-xl animate-float"></div>
    <div class="absolute bottom-20 right-20 w-40 h-40 bg-primary-400/20 rounded-full blur-xl animate-float" style="animation-delay: 1s;"></div>
    
    <div class="container-responsive relative z-10 text-center text-white">
      <div class="max-w-4xl mx-auto">
        <!-- Badge -->
        <div class="inline-flex items-center gap-2 px-4 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-full text-white/90 text-sm font-medium mb-8 animate-fade-in-scale">
          <BookOpenIcon class="h-4 w-4 text-secondary-400" />
          <span>Biblioteca de Conocimiento</span>
        </div>
        
        <!-- Título -->
        <h1 class="text-5xl md:text-6xl font-bold leading-tight mb-6 animate-fade-in-up">
          Explora Nuestros 
          <span class="bg-gradient-to-r from-secondary-400 to-yellow-400 bg-clip-text text-transparent">
            Cursos
          </span>
        </h1>
        
        <!-- Subtítulo -->
        <p class="text-xl md:text-2xl text-white/90 mb-12 mx-auto leading-relaxed animate-fade-in-up" style="animation-delay: 0.2s;">
          Descubre toda nuestra oferta educativa diseñada para diferentes necesidades y niveles de experiencia
        </p>
        
        <!-- Botones -->
        <div class="flex flex-col sm:flex-row gap-4 justify-center items-center animate-fade-in-up" style="animation-delay: 0.4s;">
          <a 
            href="#courses" 
            class="group inline-flex items-center gap-3 px-8 py-4 bg-white text-primary-900 hover:bg-gray-100 font-semibold rounded-2xl transition-all duration-300 shadow-2xl hover:shadow-white/25 hover:scale-105"
          >
            <span>Ver Cursos</span>
            <ChevronRightIcon class="h-5 w-5 transition-transform group-hover:translate-x-1" />
          </a>
          
          <a 
            href="/programas" 
            class="group inline-flex items-center gap-3 px-8 py-4 bg-secondary-600/20 backdrop-blur-sm border border-white/20 hover:bg-secondary-600/30 text-white font-semibold rounded-2xl transition-all duration-300"
          >
            <SparklesIcon class="h-5 w-5 transition-transform group-hover:rotate-12" />
            <span>Ver Programas</span>
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- Stats Section -->
  <section class="section-padding bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700">
    <div class="container-responsive">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8 text-center">
        <div class="group animate-fade-in-up">
          <div class="w-16 h-16 bg-primary-100 dark:bg-primary-900/30 rounded-2xl flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300">
            <BookOpenIcon class="h-8 w-8 text-primary-600 dark:text-primary-400" />
          </div>
          <h3 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">{allCourses.length}+</h3>
          <p class="text-gray-600 dark:text-gray-300">Cursos Disponibles</p>
        </div>
        <div class="group animate-fade-in-up" style="animation-delay: 0.1s;">
          <div class="w-16 h-16 bg-secondary-100 dark:bg-secondary-900/30 rounded-2xl flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300">
            <AwardIcon class="h-8 w-8 text-secondary-600 dark:text-secondary-400" />
          </div>
          <h3 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">{categories.length}</h3>
          <p class="text-gray-600 dark:text-gray-300">Categorías</p>
        </div>
        <div class="group animate-fade-in-up" style="animation-delay: 0.2s;">
          <div class="w-16 h-16 bg-green-100 dark:bg-green-900/30 rounded-2xl flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300">
            <UsersIcon class="h-8 w-8 text-green-600 dark:text-green-400" />
          </div>
          <h3 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">500+</h3>
          <p class="text-gray-600 dark:text-gray-300">Estudiantes Activos</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Featured Courses -->
  {featuredCourses.length > 0 && (
    <section class="section-padding bg-gray-50 dark:bg-gray-900">
      <div class="container-responsive">
        <div class="text-center mb-16 animate-fade-in-up">
          <div class="inline-flex items-center gap-2 px-4 py-2 bg-secondary-100 dark:bg-secondary-900/30 text-secondary-700 dark:text-secondary-300 rounded-full text-sm font-medium mb-4">
            <StarIcon class="h-4 w-4" />
            <span>Destacados</span>
          </div>
          <h2 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6">
            Cursos más 
            <span class="bg-gradient-to-r from-secondary-300 to-secondary-600 bg-clip-text text-transparent">
              populares
            </span>
          </h2>
          <p class="text-lg text-gray-600 dark:text-gray-300  mx-auto">
            Los cursos más populares y recomendados de nuestra plataforma
          </p>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {featuredCourses.map((course, index) => (
            <div class="group animate-fade-in-up" style={`animation-delay: ${index * 0.1}s`}>
              <div class="card card-hover h-full overflow-hidden">
                <div class="relative h-48 overflow-hidden">
                  <img 
                    src={course.fields.cursoI?.fields?.file?.url ?? '/images/default-course.jpg'}
                    alt={course.fields.cursosT}
                    class="w-full h-full object-cover transition-all duration-700 group-hover:scale-110"
                  />
                  <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"></div>
                  <div class="absolute top-4 right-4">
                    <span class={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium ${
                      course.fields.cursosDif === 'Básico' 
                        ? 'bg-green-100 text-green-800'
                        : course.fields.cursosDif === 'Intermedio'
                        ? 'bg-yellow-100 text-yellow-800'
                        : 'bg-red-100 text-red-800'
                    }`}>
                      {course.fields.cursosDif}
                    </span>
                  </div>
                </div>
                
                <div class="content-padding">
                  <div class="flex flex-wrap gap-2 mb-3">
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800 dark:bg-primary-700 dark:text-primary-100">
                      {course.fields.cursosC}
                    </span>
                  </div>
                  
                  <h3 class="font-bold text-xl text-gray-900 dark:text-white mb-3 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">
                    {course.fields.cursosT}
                  </h3>
                  
                  <p class="text-gray-600 dark:text-gray-300 mb-6 line-clamp-2">
                    {course.fields.cursosD}
                  </p>

                  <a 
                    href={`/cursos/${course.fields.cursoslug}`}
                    class="btn-primary w-full justify-center"
                  >
                    Ver Curso Completo
                  </a>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- All Courses Section -->
  <section id="courses" class="section-padding bg-white dark:bg-gray-800">
    <div class="container-responsive">
      <div class="text-center mb-12 animate-fade-in-up">
        <h2 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
          Todos los Cursos
        </h2>
        <p class="text-lg text-gray-600 dark:text-gray-300 mx-auto">
          Explora nuestra completa biblioteca de cursos educativos
        </p>
      </div>

      <!-- Filters Mejorados -->
      <div class="card p-8 mb-8 animate-fade-in-up">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div>
            <label for="search" class="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3">
              Buscar cursos
            </label>
            <div class="relative">
              <SearchIcon class="absolute left-4 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400" />
              <input
                type="text"
                id="search"
                placeholder="Buscar por nombre..."
                class="form-input pl-12"
              />
            </div>
          </div>
          
          <div>
            <label for="category" class="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3">
              Categoría
            </label>
            <select id="category" class="form-select">
              <option value="">Todas las categorías</option>
              {categories.map(category => (
                <option value={category}>{category}</option>
              ))}
            </select>
          </div>
          
          <div>
            <label for="difficulty" class="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3">
              Dificultad
            </label>
            <select id="difficulty" class="form-select">
              <option value="">Todas las dificultades</option>
              {difficulties.map(difficulty => (
                <option value={difficulty}>{difficulty}</option>
              ))}
            </select>
          </div>
        </div>
        
        <!-- Results counter -->
        <div class="mt-6 pt-6 border-t border-gray-200 dark:border-gray-700">
          <div class="flex items-center justify-between">
            <span id="results-count" class="text-sm font-medium text-gray-600 dark:text-gray-300">
              Mostrando {allCourses.length} cursos
            </span>
            <button 
              id="clear-filters"
              class="btn-ghost text-sm py-2 px-4"
            >
              Limpiar filtros
            </button>
          </div>
        </div>
      </div>

      <!-- Courses Grid -->
      <div id="courses-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
        {allCourses.map((course, index) => (
          <div 
            class="course-card group animate-fade-in-up"
            style={`animation-delay: ${index * 0.05}s`}
            data-title={course.fields.cursosT.toLowerCase()}
            data-category={course.fields.cursosC}
            data-difficulty={course.fields.cursosDif}
          >
            <div class="card card-hover h-full overflow-hidden">
              <div class="relative h-40 overflow-hidden">
                <img 
                  src={course.fields.cursoI?.fields?.file?.url ?? '/images/default-course.jpg'}
                  alt={course.fields.cursosT}
                  class="w-full h-full object-cover transition-all duration-500 group-hover:scale-105"
                  loading="lazy"
                />
                <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"></div>

                <div class="absolute top-3 right-3">
                  <span class={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${
                    course.fields.cursosDif === 'Básico' 
                      ? 'bg-green-100 text-green-800'
                      : course.fields.cursosDif === 'Intermedio'
                      ? 'bg-yellow-100 text-yellow-800'
                      : 'bg-red-100 text-red-800'
                  }`}>
                    {course.fields.cursosDif}
                  </span>
                </div>
              </div>

              <div class="p-4">
                <div class="flex flex-wrap gap-2 mb-2">
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800 dark:bg-primary-700 dark:text-primary-100">
                    {course.fields.cursosC}
                  </span>
                </div>
                
                <h3 class="font-bold text-gray-900 dark:text-white mb-2 line-clamp-2 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">
                  {course.fields.cursosT}
                </h3>
                
                <p class="text-sm text-gray-600 dark:text-gray-300 mb-4 line-clamp-3">
                  {course.fields.cursosD}
                </p>

                <a 
                  href={`/cursos/${course.fields.cursoslug}`}
                  class="block w-full text-center bg-primary-50 dark:bg-primary-900/20 hover:bg-primary-100 dark:hover:bg-primary-900/40 text-primary-700 dark:text-primary-300 font-medium py-2 px-4 rounded-lg transition-colors text-sm"
                >
                  Ver curso
                </a>
              </div>
            </div>
          </div>
        ))}
      </div>

      <!-- No results message -->
      <div id="no-results" class="hidden text-center py-16 animate-fade-in-up">
        <div class="w-20 h-20 bg-gray-100 dark:bg-gray-700 rounded-2xl flex items-center justify-center mx-auto mb-6">
          <SearchIcon class="h-10 w-10 text-gray-400" />
        </div>
        <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-3">No se encontraron cursos</h3>
        <p class="text-gray-600 dark:text-gray-300 mb-6">Intenta ajustar tus filtros de búsqueda</p>
        <button 
          id="reset-search"
          class="btn-primary"
        >
          Mostrar todos los cursos
        </button>
      </div>
    </div>
  </section>
</Layout>

<script>
  // Course filtering functionality
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('search') as HTMLInputElement;
    const categorySelect = document.getElementById('category') as HTMLSelectElement;
    const difficultySelect = document.getElementById('difficulty') as HTMLSelectElement;
    const courseCards = document.querySelectorAll('.course-card');
    const resultsCount = document.getElementById('results-count');
    const noResults = document.getElementById('no-results');
    const coursesGrid = document.getElementById('courses-grid');
    const clearFiltersBtn = document.getElementById('clear-filters');
    const resetSearchBtn = document.getElementById('reset-search');

    function filterCourses() {
      const searchTerm = searchInput.value.toLowerCase().trim();
      const selectedCategory = categorySelect.value;
      const selectedDifficulty = difficultySelect.value;

      let visibleCount = 0;

      courseCards.forEach(card => {
        const title = card.getAttribute('data-title') || '';
        const category = card.getAttribute('data-category') || '';
        const difficulty = card.getAttribute('data-difficulty') || '';

        const matchesSearch = !searchTerm || title.includes(searchTerm);
        const matchesCategory = !selectedCategory || category === selectedCategory;
        const matchesDifficulty = !selectedDifficulty || difficulty === selectedDifficulty;

        if (matchesSearch && matchesCategory && matchesDifficulty) {
          (card as HTMLElement).style.display = 'block';
          visibleCount++;
        } else {
          (card as HTMLElement).style.display = 'none';
        }
      });

      // Update results count
      if (resultsCount) {
        resultsCount.textContent = `Mostrando ${visibleCount} curso${visibleCount !== 1 ? 's' : ''}`;
      }

      // Show/hide no results message
      if (noResults && coursesGrid) {
        if (visibleCount === 0) {
          noResults.classList.remove('hidden');
          coursesGrid.style.display = 'none';
        } else {
          noResults.classList.add('hidden');
          coursesGrid.style.display = 'grid';
        }
      }
    }

    function clearFilters() {
      searchInput.value = '';
      categorySelect.value = '';
      difficultySelect.value = '';
      filterCourses();
    }

    // Add event listeners
    searchInput.addEventListener('input', filterCourses);
    categorySelect.addEventListener('change', filterCourses);
    difficultySelect.addEventListener('change', filterCourses);
    clearFiltersBtn?.addEventListener('click', clearFilters);
    resetSearchBtn?.addEventListener('click', clearFilters);
  });
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>